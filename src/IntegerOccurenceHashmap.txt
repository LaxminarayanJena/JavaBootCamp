import java.util.HashMap;
import java.util.Map.Entry;

public class RemoveDuplicates {
	
	public static void main(String[] args) {
		
		int a[]= {1,2,3,3,3,3,4,4};
		HashMap<Integer,Integer> intMapCount = new HashMap<Integer,Integer>();
		
		for (int i = 0; i < a.length; i++) { 
           
            
            if (intMapCount.containsKey(a[i])) {
				intMapCount.put(a[i], intMapCount.get(a[i]) + 1);
			} else {
				intMapCount.put(a[i], 1);
			}
	
		}
		
		int maxvalue=Collections.max((intMapCount.values()));
		System.out.println(maxvalue);
		
		for(Entry<Integer,Integer> entry :intMapCount.entrySet())
		{
			
				System.out.println(entry.getKey() + "-" +entry.getValue());
			
		}
	}
---------------------------------------------using for loop only

public class UniqueOccurrences {
    public static void main(String[] args) {
        int[] array = {1, 2, 3, 4, 5, 4, 4, 3, 2, 1, 1};

        int[] uniqueOccurrences = new int[array.length];

        for (int i = 0; i < array.length; i++) {
            if (uniqueOccurrences[i] == 0) {
                int count = 1;
                for (int j = i + 1; j < array.length; j++) {
                    if (array[i] == array[j]) {
                        count++;
                        uniqueOccurrences[j] = -1; // Marking non-unique occurrences
                    }
                }
                uniqueOccurrences[i] = count;
            }
        }

        // Printing the unique occurrences
        for (int i = 0; i < array.length; i++) {
            if (uniqueOccurrences[i] > 0) {
                System.out.println(array[i] + "-" + uniqueOccurrences[i]);
            }
        }
    }
}






































	
